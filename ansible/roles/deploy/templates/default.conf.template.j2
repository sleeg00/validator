# 여러 출처를 허용하기 위한 map 지시문
# 이 지시문은 요청 Origin 헤더에 따라 'Access-Control-Allow-Origin' 헤더 값을 동적으로 설정합니다.
map $http_origin $cors_header {
    default "";
    "http://localhost" "http://localhost";
    "http://{{ ansible_host }}" "http://{{ ansible_host }}";
    "http://{{ ip }}" "http://{{ ip }}";
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen       80;
    server_name  localhost;
    proxy_http_version 1.1;

    location ~ ^/(api(?!-docs$)|socket|sitemap.xml|auth/auth0|auth/auth0/callback|auth/logout) {
        proxy_pass           ${BACK_PROXY_PASS};
        proxy_http_version   1.1;
        proxy_set_header     Host "$host";
        proxy_set_header     X-Real-IP "$remote_addr";
        proxy_set_header     X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header     X-Forwarded-Proto "$scheme";
        proxy_set_header     Upgrade "$http_upgrade";
        proxy_set_header     Connection $connection_upgrade;
        proxy_cache_bypass   $http_upgrade;
    }
    location / {
        proxy_pass           ${FRONT_PROXY_PASS};
        proxy_http_version   1.1;
        proxy_set_header     Host "$host";
        proxy_set_header     X-Real-IP "$remote_addr";
        proxy_set_header     X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header     X-Forwarded-Proto "$scheme";
        proxy_set_header     Upgrade "$http_upgrade";
        proxy_set_header     Connection $connection_upgrade;
        proxy_cache_bypass   $http_upgrade;
    }
}

server {
    listen       8080;
    server_name  localhost;
    proxy_http_version 1.1;
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Methods;

    # map 지시문으로 동적으로 CORS 헤더 설정
    add_header 'Access-Control-Allow-Origin' $cors_header always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'PUT, GET, POST, OPTIONS, DELETE, PATCH' always;

    location / {
        proxy_pass           http://stats:8050/;
        proxy_http_version   1.1;
        proxy_set_header     Host "$host";
        proxy_set_header     X-Real-IP "$remote_addr";
        proxy_set_header     X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header     X-Forwarded-Proto "$scheme";
        proxy_set_header     Upgrade "$http_upgrade";
        proxy_set_header     Connection $connection_upgrade;
        proxy_cache_bypass   $http_upgrade;
    }
}

server {
    listen       8081;
    server_name  localhost;
    proxy_http_version 1.1;
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Methods;

    # map 지시문으로 동적으로 CORS 헤더 설정
    add_header 'Access-Control-Allow-Origin' $cors_header always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'PUT, GET, POST, OPTIONS, DELETE, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-csrf-token' always;

    location / {
        proxy_pass           http://visualizer:8050/;
        proxy_http_version   1.1;
        proxy_buffering      off;
        proxy_set_header     Host "$host";
        proxy_set_header     X-Real-IP "$remote_addr";
        proxy_connect_timeout 30m;
        proxy_read_timeout   30m;
        proxy_send_timeout   30m;
        proxy_set_header     X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header     X-Forwarded-Proto "$scheme";
        proxy_set_header     Upgrade "$http_upgrade";
        proxy_set_header     Connection $connection_upgrade;
        proxy_cache_bypass   $http_upgrade;
        if ($request_method = 'OPTIONS') {
            # map 지시문으로 동적으로 CORS 헤더 설정
            add_header 'Access-Control-Allow-Origin' $cors_header always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'PUT, GET, POST, OPTIONS, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-csrf-token' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}