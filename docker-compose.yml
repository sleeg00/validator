version: "3.8"

services:
  execution_client:
    container_name: geth-el
    image: ethereum/client-go:stable
    command:
      - --holesky
      - --datadir=/data
      - --http
      - --http.api=eth,net,engine,admin
      - --authrpc.jwtsecret=/data/jwt.hex
      - --authrpc.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --metrics
      - --metrics.addr=0.0.0.0
    volumes:
      - geth_data:/data
    ports:
      - "30303:30303/tcp"
      - "30303:30303/udp"
    networks:
      - validator_net

  consensus_client:
    container_name: lighthouse-cl
    image: sigp/lighthouse:latest
    command:
      - lighthouse
      - bn
      - --network=holesky
      - --datadir=/data
      - --execution-endpoint=http://execution_client:8551
      - --execution-jwt=/data/jwt.hex
      - --metrics
      - --metrics-address=0.0.0.0
    volumes:
      - lighthouse_data:/data
    ports:
      - "13000:13000/tcp"
      - "12000:12000/udp"
    networks:
      - validator_net
    depends_on:
      - execution_client

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # <-- 서버의 /opt/validator/prometheus/prometheus.yml를 마운트
      - prometheus_data:/prometheus
    ports:
      - "9090:9090" # Prometheus 웹 UI 포트
    networks:
      - validator_net
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000" # Grafana 웹 UI 포트
    networks:
      - validator_net
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  geth_data:
  lighthouse_data:
  prometheus_data:
  grafana_data:

networks:
  validator_net: